services:
  # Servicio para el backend de .NET
  vpass3-backend:
    build:
      context: ./VPASS3-backend # Se define la ruta a la carpeta del proyecto de backend.
      dockerfile: Dockerfile    # Se especifica el nombre del Dockerfile dentro de esa carpeta.
    container_name: contenedor-vpass3-backend # Se asigna un nombre personalizado para el contenedor.
    ports:
      - "5113:5113" # Se mapea el puerto 5113 del host al puerto 5113 del contenedor.
    environment:
      # Se configura la URL para que ASP.NET Core escuche en todas las interfaces dentro del contenedor.
      ASPNETCORE_URLS: http://+:5113
      # Se define la cadena de conexión a la base de datos, utilizando el nombre del servicio de SQL Server.
      # La sintaxis ConnectionStrings__Connection mapea a ConnectionStrings:Connection en appsettings.json.
      # Se utiliza la variable de entorno SQL_SA_PASSWORD definida en el archivo .env.
      ConnectionStrings__Connection: "Server=${URL_DATABASE};Database=${DATABASE_NAME};User ID=SA;Password=${SQL_SA_PASSWORD};MultipleActiveResultSets=true;Encrypt=False"
      # Si se tiene la clave JWT en variables de entorno para Docker (recomendado en producción), se puede añadir aquí.
      Jwt__Key: "e3c4bde1e9f47c2193a4b8d914b1d7898cd1f58d79e5a3a6f0f747b65e6d3ea9"

      # Se pasa la lista de orígenes CORS permitidos al contenedor del backend.
      # Su valor se leerá de la variable CORS_ALLOWED_ORIGINS_LIST definida en el archivo .env de Docker Compose.
      CORS_ALLOWED_ORIGINS: "${CORS_ALLOWED_ORIGINS_LIST}"
    depends_on:
      - sqlserver-vpass3 # Se asegura que el servicio de SQL Server se inicie antes que el backend.

  # Servicio para el SQL Server
  sqlserver-vpass3:
    image: mcr.microsoft.com/mssql/server:2019-latest # Se utiliza la imagen oficial de SQL Server 2019.
    container_name: sqlserver-vpass3 # Se asigna un nombre personalizado para el contenedor de SQL Server.
    environment:
      ACCEPT_EULA: "Y" # Se acepta el EULA (End-User License Agreement) de Microsoft SQL Server.
      SA_PASSWORD: "${SQL_SA_PASSWORD}" # Se utiliza la contraseña para el usuario SA definida en el archivo .env.
    ports:
      - "14000:1433" # Se mapea el puerto 14000 del host al puerto 1433 del contenedor SQL Server, para evitar conflictos con instalaciones locales.
    volumes:
      # Se persiste los datos de la base de datos en un volumen nombrado para que no se pierdan al detener o eliminar el contenedor.
      - sqlserver_data:/var/opt/mssql

      # AÑADE ESTA LÍNEA PARA TENER ACCESO A LOS BACKUPS DESDE TU MAQUINA WINDOWS
      # - C:/sql_backups:/var/opt/mssql/backup
      # Asegúrate de que la carpeta C:\sql_backups exista en tu máquina Windows.

  # Servicio para el frontend de React
  vpass3-frontend:
    build:
      context: ./VPASS3-frontend # Se define la ruta a la carpeta del proyecto de frontend.
      dockerfile: Dockerfile      # Se especifica el nombre del Dockerfile dentro de esa carpeta.
      args:
        # Se pasa la URL del backend al proceso de construcción del frontend, leyéndola del archivo .env de Docker Compose.
        # Esta URL será la que el navegador del usuario final utilizará para comunicarse con el backend.
        VITE_APP_API_URL: "${URL_API_BACKEND}"
    container_name: contenedor-vpass3-frontend # Se asigna un nombre personalizado para el contenedor.
    ports:
      - "5173:4173"
    depends_on:
      - vpass3-backend # Se asegura que el servicio de backend se inicie antes que el frontend.

# Definición de volúmenes para persistencia de datos
volumes:
  sqlserver_data: # Se define un volumen para la persistencia de los datos de SQL Server.